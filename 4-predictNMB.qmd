# predictNMB <img src='assets/4-predictNMB/hex.png' align="right" height="160" />

## 

![](assets/4-predictNMB/the-fig.png){.absolute height="600"}

##


![](assets/4-predictNMB/ropensci-page.png){.absolute height="300"}

![](assets/4-predictNMB/joss.png){.absolute height="250" bottom="0"}

## What is a CDSS

:::columns
::: {.column width="40%"}
![](assets/4-predictNMB/cdss-diagram.png){.absolute height="600"}
:::
::: {.column width="60%"}

- **IN:** Patient data 
- **OUT:** Alert/decision/information

- Usefulness relies on:
  - Clinical context
  - Decision being guided
  - Model performance

:::
:::

## Why we should we evaluate in terms of costs 

![](assets/4-predictNMB/continuum-3.png){.absolute right="50" top="150"}


## Why we should use `{predictNMB}`

-   User provides inputs for setting & intervention (w/ uncertainty)
-   Simulates & evaluates clinical prediction models within CDSS
-   Estimates NMB, patient benefit and healthcare costs


# DEMO


## Example simulation inputs

::: {style="font-size: 70%;"}
- **Quality-Adjusted Life Years (QALYs) lost due to falls ~ 0.04** 
  (Latimer et al. 2013) and has an approximate distribution of:
  $$\mathrm{B}(\alpha = 2.95, \beta = 32.25)$$  

- **Additional healthcare costs ~ \$6700** (Morello et
  al. 2015) and follows an approximate distribution of:
  $$\Gamma (\alpha = 22.05, \beta = 0.0033) $$

- *Falls prevention intervention*
  - **Costs = \$77.3**(Hill et al. 2015)
  - **Reduces falls by ~ 45%** (Haines et al. 2011) and the log
    hazard ratio follows an approximate distribution of:
    $$\mathcal{N}(\mu = -0.844, \sigma = 0.304) $$

- Willingness to pay = $28033
:::

## Example problem and inputs required {.smaller}

- Current practice: Everyone gets the fall prevention intervention
  (treat-all approach).

::: custom-small

| Input                     | Distribution                                         | R code                                         |
|---------------------------|------------------------------------------------------|------------------------------------------------|
| QALYs lost                | $$\mathrm{B}(\alpha = 2.95, \beta = 32.25)$$         | `rbeta(n = 1, shape1 = 2.95, shape2 = 32.25)`   |
| Healthcare costs          | $$\Gamma (\alpha = 22.05, \beta = 0.0033) $$         | `rgamma(n = 1, shape = 22.05, rate = 0.0033)`  |
| Treatment effect (hazard) | $$\exp(\mathcal{N}(\mu = -0.844, \sigma = 0.304)) $$ | `exp(rnorm(n = 1, mean = -0.844, sd = 0.304))` |
| Treatment cost            | \$77.30                                              | \-                                             |
| WTP                       | \$28033                                              | \-                                             |

:::

::: footer
Calculations and code for using details in paper cited papers above is
described in (Parsons et al. 2023).
:::

## Question

- At what AUC should we think our model is worth implementing?
- In what settings is our our model most likely to be helpful?


## Demo - Applying inputs {.smaller}

```{r}
library(tidyverse)
library(parallel)
```


```{r}
#| echo: true
library(predictNMB)

validation_sampler <- get_nmb_sampler(
  outcome_cost = function()  rgamma(1, shape = 22.05, rate = 0.0033),
  wtp = 28033,
  qalys_lost = function() rbeta(1, shape1 = 2.95, shape2 = 32.25),
  high_risk_group_treatment_effect = function() exp(rnorm(1, mean = -0.844, sd = 0.304)),
  high_risk_group_treatment_cost = 77.3,
  low_risk_group_treatment_effect = 0,
  low_risk_group_treatment_cost = 0,
  use_expected_values = FALSE
)

training_sampler <- get_nmb_sampler(
  outcome_cost = function()  rgamma(1, shape = 22.05, rate = 0.0033),
  wtp = 28033,
  qalys_lost = function() rbeta(1, shape1 = 2.95, shape2 = 32.25),
  high_risk_group_treatment_effect = function() exp(rnorm(1, mean = -0.844, sd = 0.304)),
  high_risk_group_treatment_cost = 77.3,
  low_risk_group_treatment_effect = 0,
  low_risk_group_treatment_cost = 0,
  use_expected_values = TRUE
)
```


## Demo - AUC {.smaller}

Running our simulation (Q1: screening many possible AUCs)

``` r
library(parallel)
cl <- makeCluster(detectCores() - 1)

screen_simulation_inputs(
  n_sims = 500,
  n_valid = 10000,
  sim_auc = seq(0.6,0.95, 0.05),
  event_rate = 0.03,
  fx_nmb_training = training_sampler,
  fx_nmb_evaluation = validation_sampler,
  cutpoint_methods = c("all", "none", "youden"),
  show_progress = TRUE,
  cl = cl
)
```

```{r}
if(!"screen-sim-1.rds" %in% list.files("assets/4-predictNMB/data")) {
  cl <- makeCluster(detectCores() - 1)
  
  screen_auc <- screen_simulation_inputs(
    n_sims = 2500,
    n_valid = 10000,
    sim_auc = seq(0.6,0.95, 0.05),
    event_rate = 0.03,
    fx_nmb_training = training_sampler,
    fx_nmb_evaluation = validation_sampler,
    cutpoint_methods = c("all", "none", "youden"),
    show_progress = TRUE,
    cl = cl
  )
  
  saveRDS(screen_auc, file.path("assets/4-predictNMB/data", "screen-sim-1.rds"))
} else {
  screen_auc <- readRDS(file.path("assets/4-predictNMB/data", "screen-sim-1.rds"))
}
```

## Demo - AUC {.smaller}

```{r}
#| echo: true
#| fig-align: center
autoplot(screen_auc, dodge_width = 0.01, plot_range = F)
```


## Demo - Event rate {.smaller}

```{r}
if(!"screen-sim-2.rds" %in% list.files("assets/4-predictNMB/data")) {
  cl <- makeCluster(detectCores() - 1)
  
  screen_event_rate <- screen_simulation_inputs(
    n_sims = 2500,
    n_valid = 10000,
    sim_auc = 0.8,
    event_rate = c(0.01, 0.03, 0.05, 0.1, 0.2),
    fx_nmb_training = training_sampler,
    fx_nmb_evaluation = validation_sampler,
    cutpoint_methods = c("all", "none", "youden"),
    show_progress = TRUE,
    cl = cl
  )
  
  saveRDS(screen_event_rate, file.path("assets/4-predictNMB/data", "screen-sim-2.rds"))
} else {
  screen_event_rate <- readRDS(file.path("assets/4-predictNMB/data", "screen-sim-2.rds"))
}
```


```{r}
#| echo: true
#| fig-align: center

# AUC = 0.8
autoplot(screen_event_rate, dodge_width = 0.02, plot_range = F) +
  scale_x_continuous(trans = "log", breaks = c(0.01, 0.03, 0.05, 0.1, 0.2))
```

## Demo - Event rate {.smaller}

```{r}
#| layout-ncol: 2
library(flextable)
make_table <- function(x) {
  d <- summary(x) |> arrange(desc(median))
  names(d) <- c(" ", "NMB (Median)", "NMB (95% Interval)")
  tbl <- flextable(d)
  
  header_text <- glue::glue("Event rate: {x$meta_data$event_rate}")
  
  add_header_lines(tbl, values = header_text) |> autofit()
}

screen_event_rate$simulations[[1]] |> make_table()
screen_event_rate$simulations[[5]] |> make_table()
```

## Demo - Cost-effectiveness plots {.smaller}

```{r}
#| echo: true
#| fig-align: center

# AUC = 0.8
# Event rate = 0.03
ce_plot(
  screen_event_rate$simulations[[2]], 
  ref_col = "all", 
  add_prop_ce = TRUE
) + theme(aspect.ratio = 1)
```
## Summary

- Software that can be used to evaluate a hypothetical prediction models in relevant terms
- May be used to guide research and implementation efforts towards CDSS that are more likely to be clinically useful

##

![](assets/4-predictNMB/rmed23.PNG){.absolute left="0" height="300"}
![](assets/4-predictNMB/arizona.png){.absolute right="0" height="300"}

##

![](assets/4-predictNMB/venables-award.PNG){fig-align="center" height="300"}

![](assets/4-predictNMB/ardc.PNG){fig-align="center" height="300"}
